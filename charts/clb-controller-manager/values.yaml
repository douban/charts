# Default values for clb-controller-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Cloud provider configuration
secret:
  # Set to false if you want to use existing secret
  create: true
  nameOverride: "clb-controller-manager-config"
  region: ""
  vpc_id: ""
  secret_id: ""
  secret_key: ""

env:
  # Tencent Cloud resource ID prefix configuration. When sending tag binding/unbinding requests to Tencent Cloud, the resource ID needs to be specified. Docs: https://cloud.tencent.com/document/product/598/10606
  clbPrefix: ""
  # Specifies the fixed tags displayed in the Tencent Cloud CLB console. All CLBs managed by clb-controller-manager will have the following tags attached. Format: tagName=tagValue, multiple tags separated by commas.
  clbTag: ""

replicaCount: 1

image:
  repository: docker.douban/sa/clb-controller-manager
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.30.1-v2.4

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 50Mi
  # requests:
  #   cpu: 100m
  #   memory: 50Mi

nodeSelector: {}

tolerations:
  # this taint is set by all kubelets running `--cloud-provider=external`
  # so we should tolerate it to schedule the digitalocean ccm
  - key: "node.cloudprovider.kubernetes.io/uninitialized"
    value: "true"
    effect: "NoSchedule"
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  # cloud controller manages should be able to run on masters
  - key: "node-role.kubernetes.io/master"
    effect: "NoSchedule"
  - key: "douban.com/reserved"
    effect: "NoExecute"
    value: "sa"

affinity: {}

hostNetwork: true
dnsPolicy: Default
priorityClassName: system-cluster-critical

serviceAccount:
  # The name of the service account to use.
  nameOverride: ""
  annotations: {}

clusterRole:
  # The name of the cluster role to use.
  nameOverride: ""
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"

clusterRoleBinding:
  # The name of the cluster role binding to use.
  nameOverride: ""
  annotations: {}

service:
  # Set to true if you want to create a loadbalancerservice
  enabled: false
  name: ""
  type: LoadBalancer
  instance: ""
  externalTrafficPolicy: Cluster
  sessionAffinity: None
  component: "controller"
  selector:
    name: "ingress-nginx"

  annotations:
    # optional if you wanna enable health check to the backend, default: yes
    healthCheck: "yes"
    # load balancer name
    loadBalancerName: ""
    # subnet id
    subnetId: ""
    # option: open/internal
    loadBalancerType: ""
    # optional, only needed to set when you already created lb mannually and don't wanna controller req lb for you.
    vip: ""
    # optional default: 10Mbps
    bandwidth: ""

  ports:
    http:
      port: 80
      nodePort: ""
    https:
      port: 443
      nodePort: ""

  labels:
    app.kubernetes.io/managed-by: "SA"
    app.kubernetes.io/part-of: "ingress-nginx"
