secret:
  # Name of an existing secret to use (leave empty to auto-create a new secret)
  # If provided, the chart will use this existing secret instead of creating one
  # When using existing secret:
  # 1. The secret must exist in the same namespace
  # 2. Must contain exactly the right keys and values
  # 3. Values must be properly base64 encoded
  existingSecret: ""

  # API credentials (required when not using existingSecret)
  # Secret content (will be automatically base64 encoded)
  region: ""
  vpc_id: ""
  secret_id: ""
  secret_key: ""

env:
  # Tencent Cloud resource ID prefix configuration. When sending tag binding/unbinding requests to Tencent Cloud, the resource ID needs to be specified. Docs: https://cloud.tencent.com/document/product/598/10606
  clbPrefix: ""
  # Specifies the fixed tags displayed in the Tencent Cloud CLB console. All CLBs managed by clb-controller-manager will have the following tags attached. Format: tagName=tagValue, multiple tags separated by commas.
  clbTag: ""

replicaCount: 1

image:
  repository: ""
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

annotations: {}
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
topologySpreadConstraints: []
podSecurityContext: {}
securityContext: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 50Mi
  # requests:
  #   cpu: 100m
  #   memory: 50Mi

nodeSelector: {}

tolerations:
  # this taint is set by all kubelets running `--cloud-provider=external`
  # so we should tolerate it to schedule the digitalocean ccm
  - key: "node.cloudprovider.kubernetes.io/uninitialized"
    value: "true"
    effect: "NoSchedule"
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  # cloud controller manages should be able to run on masters
  - key: "node-role.kubernetes.io/master"
    effect: "NoSchedule"

affinity: {}

hostNetwork: true
dnsPolicy: Default
priorityClassName: system-cluster-critical

serviceAccount:
  # The name of the service account to use.
  name: ""
  annotations: {}

clusterRole:
  # The name of the cluster role to use.
  name: ""
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"

clusterRoleBinding:
  # The name of the cluster role binding to use.
  name: ""
  annotations: {}
